/**
 * Adventure Saria Website - Optimized JavaScript
 * This file contains the core functionality for the Adventure Saria Hotel website
 */

// Document Ready Function
document.addEventListener('DOMContentLoaded', function() {
    // Initialize AOS
    AOS.init({
        duration: 800,
        easing: 'ease',
        once: true,
        offset: 100
    });

    // Hide preloader when page is loaded
    const preloader = document.querySelector('.preloader');
    if (preloader) {
        setTimeout(function() {
            preloader.classList.add('preloader-hidden');
            setTimeout(function() {
                preloader.style.display = 'none';
            }, 500);
        }, 1000);
    }

    // Smooth scroll for navigation links
    const navLinks = document.querySelectorAll('.navbar a[href^="#"]');
    navLinks.forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            const targetId = this.getAttribute('href');
            const targetElement = document.querySelector(targetId);
            if (targetElement) {
                window.scrollTo({
                    top: targetElement.offsetTop - 100,
                    behavior: 'smooth'
                });
            }
        });
    });

    // Mobile Navigation - Proper Implementation
    const initMobileNav = function() {
        // Get the hamburger button and nav links elements
        const hamburger = document.querySelector('.hamburger');
        const navLinks = document.querySelector('.nav-links');
        
        if (!hamburger || !navLinks) {
            console.log("Mobile menu elements not found!");
            return;
        }
        
        // Directly add event listener to hamburger button
        hamburger.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            
            // Toggle classes for both elements
            this.classList.toggle('active');
            navLinks.classList.toggle('active');
            
            // Add/remove body class to prevent scrolling when menu is open
            if (this.classList.contains('active')) {
                document.body.classList.add('menu-open');
            } else {
                document.body.classList.remove('menu-open');
            }
            
            console.log("Hamburger clicked, nav state:", navLinks.classList.contains('active'));
        });
        
        // Close mobile menu when clicking a link
        navLinks.querySelectorAll('a').forEach(link => {
            link.addEventListener('click', function() {
                hamburger.classList.remove('active');
                navLinks.classList.remove('active');
                document.body.classList.remove('menu-open');
            });
        });
        
        // Close menu when clicking outside
        document.addEventListener('click', function(event) {
            const target = event.target;
            
            // If click is outside navbar and menu is open, close it
            if (!target.closest('.navbar') && 
                !target.closest('.hamburger') && 
                navLinks.classList.contains('active')) {
                
                hamburger.classList.remove('active');
                navLinks.classList.remove('active');
                document.body.classList.remove('menu-open');
            }
        });
    };
    
    // Initialize mobile navigation
    initMobileNav();

    // Initialize Counter Animation
    initCounter();

    // Handle reservation form submission
    const reservationForm = document.getElementById('reservationForm');
    if (reservationForm) {
        reservationForm.addEventListener('submit', function(e) {
            e.preventDefault();
            // Form validation would go here
            alert('Thank you for your reservation request! We will contact you shortly.');
            this.reset();
        });
    }

    // Initialize testimonial carousel if it exists
    const testimonialCarousel = document.querySelector('.testimonial-carousel');
    if (testimonialCarousel && typeof jQuery !== 'undefined' && jQuery().owlCarousel) {
        jQuery('.testimonial-carousel').owlCarousel({
            loop: true,
            margin: 20,
            nav: false,
            dots: true,
            responsive: {
                0: { items: 1 },
                768: { items: 2 },
                992: { items: 3 }
            }
        });
    }

    // Gallery image popup
    const galleryItems = document.querySelectorAll('.gallery-item');
    galleryItems.forEach(item => {
        item.addEventListener('click', function() {
            const imgSrc = this.querySelector('img').getAttribute('src');
            const popupContainer = document.createElement('div');
            popupContainer.className = 'gallery-popup';
            popupContainer.innerHTML = `
                <div class="gallery-popup-inner">
                    <img src="${imgSrc}" alt="Gallery Image">
                    <span class="close-popup">&times;</span>
                </div>
            `;
            document.body.appendChild(popupContainer);
            
            // Close popup on click
            popupContainer.addEventListener('click', function() {
                this.remove();
            });
        });
    });
});

// Counter animation function
function initCounter() {
    const counters = document.querySelectorAll('.counter-value');
    const speed = 200;

    function startCounting() {
        counters.forEach(counter => {
            const target = parseInt(counter.getAttribute('data-target'));
            const count = 0;
            const increment = Math.ceil(target / speed);
            
            function updateCount() {
                const currentCount = parseInt(counter.innerText);
                if (currentCount < target) {
                    counter.innerText = Math.min(currentCount + increment, target);
                    setTimeout(updateCount, 10);
                }
            }
            
            counter.innerText = '0';
            updateCount();
        });
    }

    // Start counting when section comes into view
    const observerOptions = {
        root: null,
        rootMargin: '0px',
        threshold: 0.1
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                startCounting();
                observer.unobserve(entry.target);
            }
        });
    }, observerOptions);

    const counterSection = document.querySelector('.stats-section');
    if (counterSection) {
        observer.observe(counterSection);
    } else {
        // If counter section is not found but counters exist, start counting immediately
        if (counters.length > 0) {
            startCounting();
        }
    }
}
